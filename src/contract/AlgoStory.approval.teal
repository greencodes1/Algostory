#pragma version 10

smart_contracts.hello_world.contract.AlgoStory.approval_program:
    intcblock 1 0 4
    bytecblock 0x151f7c75
    callsub __puya_arc4_router__
    return


// smart_contracts.hello_world.contract.AlgoStory.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    proto 0 1
    txn NumAppArgs
    bz __puya_arc4_router___bare_routing@9
    pushbytess 0x19a642a7 0x6d848a14 0xc31e557a 0x2fcd97ca 0xc7ea4205 // method "creator()address", method "book_opt_in(asset)void", method "list_book(axfer,uint64)void", method "book_price(asset)uint64", method "purchase_book(asset,pay)void"
    txna ApplicationArgs 0
    match __puya_arc4_router___creator_route@2 __puya_arc4_router___book_opt_in_route@3 __puya_arc4_router___list_book_route@4 __puya_arc4_router___book_price_route@5 __puya_arc4_router___purchase_book_route@6
    intc_1 // 0
    retsub

__puya_arc4_router___creator_route@2:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    callsub creator
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___book_opt_in_route@3:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    btoi
    txnas Assets
    callsub book_opt_in
    intc_0 // 1
    retsub

__puya_arc4_router___list_book_route@4:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txn GroupIndex
    intc_0 // 1
    -
    dup
    gtxns TypeEnum
    intc_2 // axfer
    ==
    assert // transaction type is axfer
    txna ApplicationArgs 1
    callsub list_book
    intc_0 // 1
    retsub

__puya_arc4_router___book_price_route@5:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    btoi
    txnas Assets
    callsub book_price
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___purchase_book_route@6:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    btoi
    txnas Assets
    txn GroupIndex
    intc_0 // 1
    -
    dup
    gtxns TypeEnum
    intc_0 // pay
    ==
    assert // transaction type is pay
    callsub purchase_book
    intc_0 // 1
    retsub

__puya_arc4_router___bare_routing@9:
    txn OnCompletion
    bnz __puya_arc4_router___after_if_else@13
    txn ApplicationID
    !
    assert // is creating
    intc_0 // 1
    retsub

__puya_arc4_router___after_if_else@13:
    intc_1 // 0
    retsub


// smart_contracts.hello_world.contract.AlgoStory.creator() -> bytes:
creator:
    proto 0 1
    global CreatorAddress
    retsub


// smart_contracts.hello_world.contract.AlgoStory.book_opt_in(nft: uint64) -> void:
book_opt_in:
    proto 1 0
    itxn_begin
    global CurrentApplicationAddress
    intc_1 // 0
    itxn_field AssetAmount
    itxn_field AssetReceiver
    frame_dig -1
    itxn_field XferAsset
    intc_2 // axfer
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    retsub


// smart_contracts.hello_world.contract.AlgoStory.list_book(axfer: uint64, price: bytes) -> void:
list_book:
    proto 2 0
    frame_dig -2
    gtxns AssetReceiver
    global CurrentApplicationAddress
    ==
    assert // Asset receiver must be the application address
    frame_dig -2
    gtxns XferAsset
    callsub box_key
    frame_dig -1
    box_put
    retsub


// smart_contracts.hello_world.contract.AlgoStory.box_key(nft: uint64) -> bytes:
box_key:
    proto 1 1
    frame_dig -1
    itob
    retsub


// smart_contracts.hello_world.contract.AlgoStory.book_price(nft: uint64) -> uint64:
book_price:
    proto 1 1
    frame_dig -1
    callsub box_key
    box_get
    assert // Price not found
    btoi
    retsub


// smart_contracts.hello_world.contract.AlgoStory.purchase_book(nft: uint64, payment: uint64) -> void:
purchase_book:
    proto 2 0
    global CurrentApplicationAddress
    frame_dig -2
    asset_holding_get AssetBalance
    assert // account opted into asset
    assert // NFT not available for purchase
    frame_dig -1
    gtxns Sender
    dup
    frame_dig -2
    asset_holding_get AssetBalance
    bury 1
    assert // Sender must opt in to receive NFT
    frame_dig -1
    gtxns Receiver
    global CreatorAddress
    ==
    assert // Payment receiver must be the creator
    itxn_begin
    intc_0 // 1
    itxn_field AssetAmount
    itxn_field AssetReceiver
    frame_dig -2
    itxn_field XferAsset
    intc_2 // axfer
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    retsub
